name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    - name: Enforce formatting
      run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
    - uses: Swatinem/rust-cache@v2
    - name: Linting
      run: cargo clippy --all -- -D warnings

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - name: Run build
      run: cargo build --all --verbose

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - name: Run tests
      run: cargo test --all --verbose

  # coverage:
  #   name: Code coverage
  #   runs-on: ubuntu-latest
  #   container:
  #     image: xd009642/tarpaulin
  #     options: --security-opt seccomp=unconfined
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Generate code coverage
  #     run: |
  #       cargo tarpaulin --verbose --workspace
